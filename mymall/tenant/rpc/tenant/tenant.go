// Code generated by goctl. DO NOT EDIT!
// Source: tenant.proto

package tenant

import (
	"context"

	"my_test_demo/mymall/tenant/rpc/protoc/tenant"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddTenantReq = tenant.AddTenantReq
	AddTenantRsp = tenant.AddTenantRsp
	TenantRsp    = tenant.TenantRsp
	TidReq       = tenant.TidReq

	Tenant interface {
		GetTenant(ctx context.Context, in *TidReq, opts ...grpc.CallOption) (*TenantRsp, error)
		AddTenant(ctx context.Context, in *AddTenantReq, opts ...grpc.CallOption) (*AddTenantRsp, error)
	}

	defaultTenant struct {
		cli zrpc.Client
	}
)

func NewTenant(cli zrpc.Client) Tenant {
	return &defaultTenant{
		cli: cli,
	}
}

func (m *defaultTenant) GetTenant(ctx context.Context, in *TidReq, opts ...grpc.CallOption) (*TenantRsp, error) {
	client := tenant.NewTenantClient(m.cli.Conn())
	return client.GetTenant(ctx, in, opts...)
}

func (m *defaultTenant) AddTenant(ctx context.Context, in *AddTenantReq, opts ...grpc.CallOption) (*AddTenantRsp, error) {
	client := tenant.NewTenantClient(m.cli.Conn())
	return client.AddTenant(ctx, in, opts...)
}
